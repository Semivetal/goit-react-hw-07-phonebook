{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","App.module.css","redux/contactForm/contacts-actions.js","redux/contactForm/contacts-operations.js","redux/contactForm/contacts-selector.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","redux/contactForm/contacts-reducer.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","post","deleteContact","id","delete","getContacts","state","contacts","items","getIsLoading","loading","getFilter","filter","getVisibleContacts","createSelector","allContacts","lowerCasedFilter","toLocaleLowerCase","includes","connect","contactsSelectors","isLoading","onSubmit","contactsOperations","useState","setName","setNumber","nameInputId","uuid","v1","numberInputId","handleChange","event","currentTarget","value","reset","preventDefault","foundNames","map","lowerName","alert","className","styles","contactForm","htmlFor","input","type","pattern","title","required","onChange","button","contactsActions","target","inputId","labelId","form","label","filterInput","onDeleteContact","useEffect","length","contactList","contactItem","contactName","contactNumber","contactBtn","onClick","context","createReducer","_","payload","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec30d250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3dGr5\",\"input\":\"ContactForm_input__2P7Ly\",\"contactForm\":\"ContactForm_contactForm__kM7YT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3qZ0J\",\"form\":\"Filter_form__2Nb3Q\",\"label\":\"Filter_label__3ZiHv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"context\":\"App_context__vUu7m\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteContactsRequest = createAction(\n  \"contacts/deleteContactsRequest\"\n);\nexport const deleteContactsSuccess = createAction(\n  \"contacts/deleteContactsSuccess\"\n);\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import {\n  addContactsError,\n  addContactsSuccess,\n  addContactsRequest,\n  deleteContactsError,\n  deleteContactsSuccess,\n  deleteContactsRequest,\n  fetchContactsError,\n  fetchContactsSuccess,\n  fetchContactsRequest,\n} from \"./contacts-actions\";\nimport axios from \"axios\";\n\naxios.defaults.baseURL = \"https://619a3f5a9022ea0017a7b0a2.mockapi.io/\";\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios.get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactsRequest());\n\n  axios.post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\n    .catch(error => dispatch(addContactsError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactsRequest());\n\n  axios.delete(`/contacts/${id}`)\n    .then(() => dispatch(deleteContactsSuccess(id)))\n    .catch(error => dispatch(deleteContactsError(error)));\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = (state) => state.contacts.items;\nexport const getIsLoading = (state) => state.contacts.loading;\nexport const getFilter = (state) => state.contacts.filter;\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (allContacts, filter) => {\n    const lowerCasedFilter = filter.toLocaleLowerCase();\n    return allContacts.filter((contact) =>\n      contact.name.toLocaleLowerCase().includes(lowerCasedFilter)\n    );\n  }\n);\n\n// getVisibleContacts without memoization\n/* \nexport const getVisibleContacts = state => {\n   const allContacts = getContacts(state);\n   const filter = getFilter(state);\n   const lowerCasedFilter = filter.toLocaleLowerCase();\n\n   return allContacts.filter(contact => \n       contact.name.toLocaleLowerCase().includes(lowerCasedFilter));\n}; \n*/\n","import { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { contactsOperations, contactsSelectors } from \"redux/contactForm\";\nimport { v1 as uuid, v1 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nfunction ContactForm({ contacts, onSubmit, isLoading }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const nameInputId = uuid(v1);\n  const numberInputId = uuid(v1);\n\n  const handleChange = (event) => {\n    const { value, name } = event.currentTarget;\n    if (name === \"name\") {\n      setName(value);\n    }\n    if (name === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const addContact = (name, number) => {\n    const foundNames = contacts.map((contact) =>\n      contact.name.toLocaleLowerCase()\n    );\n    const lowerName = name.toLocaleLowerCase();\n    if (foundNames.includes(lowerName)) {\n      return alert(`${name} is in contact list`);\n    }\n    onSubmit(name, number);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addContact(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} className={styles.contactForm}>\n        <label htmlFor={nameInputId}>Name</label>\n        <input\n          className={styles.input}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n\n        <label htmlFor={numberInputId}>Number</label>\n        <input\n          className={styles.input}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          id={numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n\n        <button className={styles.button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n      {isLoading && <h2>Loading...</h2>}\n    </>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getContacts(state),\n  isLoading: contactsSelectors.getIsLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (name, number) =>\n    dispatch(contactsOperations.addContact(name, number)),\n});\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { contactsSelectors } from \"redux/contactForm\";\nimport * as contactsActions from \"redux/contactForm/contacts-actions\";\nimport { v1 as uuid, v1 } from \"uuid\";\nimport styles from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  const inputId = uuid(v1);\n  const labelId = uuid(v1);\n\n  return (\n    <>\n      <div className={styles.form}>\n        <label htmlFor={labelId} className={styles.label}>\n          Find contacts by\n        </label>\n        <input\n          id={inputId}\n          type=\"text\"\n          value={value}\n          name=\"filter\"\n          onChange={onChange}\n          className={styles.filterInput}\n        />\n      </div>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (event) =>\n    dispatch(contactsActions.changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { contactsSelectors, contactsOperations } from \"redux/contactForm\";\nimport styles from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact, fetchContacts }) => {\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    contacts.length > 0 && (\n      <ul className={styles.contactList}>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.contactItem}>\n            <span className={styles.contactName}>{name}</span>\n            <span className={styles.contactNumber}>{number}</span>\n            <button\n              className={styles.contactBtn}\n              type=\"button\"\n              onClick={() => onDeleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteContact: (id) => dispatch(contactsOperations.deleteContact(id)),\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  OnDeleteContact: PropTypes.func,\n  fetchContacts: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { contactsSelectors } from \"redux/contactForm\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\nimport styles from \"./App.module.css\";\n\nfunction App({ contacts }) {\n  return (\n    <div className={styles.context}>\n      <h1 className=\"text\">Phonebook</h1>\n      <ContactForm />\n      {contacts.length > 0 && (\n        <>\n          <Filter />\n          <h2 className=\"text\">Contacts</h2>\n        </>\n      )}\n      <ContactList />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getContacts(state),\n});\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default connect(mapStateToProps, null)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nimport {\n  addContactsError,\n  addContactsSuccess,\n  addContactsRequest,\n  deleteContactsSuccess,\n  deleteContactsRequest,\n  deleteContactsError,\n  fetchContactsError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  changeFilter,\n} from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteContactsRequest]: () => true,\n  [deleteContactsSuccess]: () => false,\n  [deleteContactsError]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, action) => action.payload,\n  [addContactsError]: (_, action) => action.payload,\n  [deleteContactsError]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./contactForm/contacts-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"redux/store\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2URtX\",\"contactItem\":\"ContactList_contactItem__3VGS5\",\"contactName\":\"ContactList_contactName__1f4ry\",\"contactNumber\":\"ContactList_contactNumber__2Diir\",\"contactBtn\":\"ContactList_contactBtn__9zz9p\"};"],"sourceRoot":""}